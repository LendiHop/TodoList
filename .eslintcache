[{"D:\\Incubator\\todo\\src\\index.tsx":"1","D:\\Incubator\\todo\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","D:\\Incubator\\todo\\src\\features\\TodolistsList\\todolists-reducer.ts":"3","D:\\Incubator\\todo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"4","D:\\Incubator\\todo\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","D:\\Incubator\\todo\\src\\features\\Login\\Login.tsx":"6","D:\\Incubator\\todo\\src\\app\\App.tsx":"7","D:\\Incubator\\todo\\src\\api\\todolists-api.ts":"8","D:\\Incubator\\todo\\src\\app\\store.ts":"9","D:\\Incubator\\todo\\src\\features\\Login\\auth-reducer.ts":"10","D:\\Incubator\\todo\\src\\app\\app-reducer.ts":"11","D:\\Incubator\\todo\\src\\components\\EditableSpan\\EditableSpan.tsx":"12"},{"size":752,"mtime":1626364050344,"results":"13","hashOfConfig":"14"},{"size":4028,"mtime":1626530924818,"results":"15","hashOfConfig":"14"},{"size":4585,"mtime":1597327450000,"results":"16","hashOfConfig":"14"},{"size":1773,"mtime":1596295538000,"results":"17","hashOfConfig":"14"},{"size":5562,"mtime":1626543801858,"results":"18","hashOfConfig":"14"},{"size":3473,"mtime":1626530699656,"results":"19","hashOfConfig":"14"},{"size":2591,"mtime":1626542769537,"results":"20","hashOfConfig":"14"},{"size":3041,"mtime":1626542733878,"results":"21","hashOfConfig":"14"},{"size":1121,"mtime":1626528022335,"results":"22","hashOfConfig":"14"},{"size":1985,"mtime":1626542752078,"results":"23","hashOfConfig":"14"},{"size":2426,"mtime":1626542327277,"results":"24","hashOfConfig":"14"},{"size":952,"mtime":1594154724000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ix4af",{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Incubator\\todo\\src\\index.tsx",[],["52","53"],"D:\\Incubator\\todo\\src\\features\\TodolistsList\\TodolistsList.tsx",["54","55","56","57","58","59","60","61"],"D:\\Incubator\\todo\\src\\features\\TodolistsList\\todolists-reducer.ts",["62"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","D:\\Incubator\\todo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["63","64","65"],"D:\\Incubator\\todo\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"D:\\Incubator\\todo\\src\\features\\Login\\Login.tsx",["66"],"D:\\Incubator\\todo\\src\\app\\App.tsx",[],"D:\\Incubator\\todo\\src\\api\\todolists-api.ts",[],"D:\\Incubator\\todo\\src\\app\\store.ts",[],"D:\\Incubator\\todo\\src\\features\\Login\\auth-reducer.ts",[],"D:\\Incubator\\todo\\src\\app\\app-reducer.ts",[],"D:\\Incubator\\todo\\src\\components\\EditableSpan\\EditableSpan.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":36,"column":8,"nodeType":"73","endLine":36,"endColumn":10,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":41,"column":8,"nodeType":"73","endLine":41,"endColumn":10,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"75","line":46,"column":8,"nodeType":"73","endLine":46,"endColumn":10,"suggestions":"77"},{"ruleId":"71","severity":1,"message":"75","line":51,"column":8,"nodeType":"73","endLine":51,"endColumn":10,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"75","line":56,"column":8,"nodeType":"73","endLine":56,"endColumn":10,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"75","line":61,"column":8,"nodeType":"73","endLine":61,"endColumn":10,"suggestions":"80"},{"ruleId":"71","severity":1,"message":"75","line":66,"column":8,"nodeType":"73","endLine":66,"endColumn":10,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"75","line":71,"column":8,"nodeType":"73","endLine":71,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":10,"column":45,"nodeType":"85","messageId":"86","endLine":10,"endColumn":47},{"ruleId":"71","severity":1,"message":"87","line":15,"column":97,"nodeType":"73","endLine":15,"endColumn":130,"suggestions":"88"},{"ruleId":"71","severity":1,"message":"87","line":20,"column":8,"nodeType":"73","endLine":20,"endColumn":41,"suggestions":"89"},{"ruleId":"71","severity":1,"message":"87","line":24,"column":8,"nodeType":"73","endLine":24,"endColumn":41,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":57,"column":28,"nodeType":"93","endLine":57,"endColumn":45},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["97"],["98"],["99"],["100"],["101"],["102"],["103"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["104"],["105"],["106"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},{"desc":"109","fix":"112"},{"desc":"109","fix":"113"},{"desc":"109","fix":"114"},{"desc":"109","fix":"115"},{"desc":"109","fix":"116"},{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},{"desc":"117","fix":"120"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"121","text":"122"},"Update the dependencies array to be: [dispatch]",{"range":"123","text":"124"},{"range":"125","text":"124"},{"range":"126","text":"124"},{"range":"127","text":"124"},{"range":"128","text":"124"},{"range":"129","text":"124"},{"range":"130","text":"124"},"Update the dependencies array to be: [props]",{"range":"131","text":"132"},{"range":"133","text":"132"},{"range":"134","text":"132"},[1327,1329],"[demo, dispatch, isLoggedIn]",[1498,1500],"[dispatch]",[1669,1671],[1874,1876],[2087,2089],[2288,2290],[2435,2437],[2614,2616],[765,798],"[props]",[1071,1104],[1261,1294]]