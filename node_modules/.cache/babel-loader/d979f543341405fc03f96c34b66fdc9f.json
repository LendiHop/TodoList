{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  const [title, setTitle] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const addTask = () => {\n    if (title.trim() !== \"\") {\n      props.addTask(title, props.todoListID);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n\n  const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickRemoveTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.todoListID);\n\n    const onChangeHandler = e => {\n      let newIsDoneValue = e.currentTarget.checked;\n      props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"all\" ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"active\" ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"completed\" ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/Incubator/todo/src/Todolist.tsx"],"names":["React","useState","Todolist","props","title","setTitle","error","setError","addTask","trim","todoListID","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","onClickRemoveTodoList","removeTodoList","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasks","map","t","onClickHandler","removeTask","id","newIsDoneValue","checked","changeTaskStatus","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListID: string) => void\r\n    changeFilter: (value: FilterValuesType, todoListID: string) => void\r\n    addTask: (title: string, todoListID: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todoListID: string) => void\r\n    filter: FilterValuesType\r\n    todoListID: string\r\n    removeTodoList: (todoListID: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n\r\n    const addTask = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addTask(title, props.todoListID);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\r\n\r\n    return <div>\r\n        <h3>{props.title}\r\n            <button onClick={onClickRemoveTodoList}>x</button>\r\n        </h3>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.todoListID)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === \"all\" ? \"active-filter\" : \"\"} onClick={onAllClickHandler}>All</button>\r\n            <button className={props.filter === \"active\" ? \"active-filter\" : \"\"} onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === \"completed\" ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}