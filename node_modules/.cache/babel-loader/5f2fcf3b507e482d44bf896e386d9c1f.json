{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\AddItemForm.tsx\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nexport function AddItemForm(props) {\n  const [title, setTitle] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const addItem = () => {\n    if (title.trim() !== \"\") {\n      props.addItem(title.trim());\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.charCode === 13) {\n      addItem();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: addItem,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, error));\n}","map":{"version":3,"sources":["D:/Incubator/todo/src/AddItemForm.tsx"],"names":["React","useState","Button","AddItemForm","props","title","setTitle","error","setError","onChangeHandler","e","currentTarget","value","addItem","trim","onKeyPressHandler","charCode"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAMA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAkD;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAgB,IAAhB,CAAlC;;AAEA,QAAMQ,eAAe,GAAIC,CAAD,IAAsC;AAC1DJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIR,KAAK,CAACS,IAAN,OAAiB,EAArB,EAAyB;AACrBV,MAAAA,KAAK,CAACS,OAAN,CAAcR,KAAK,CAACS,IAAN,EAAd;AACAR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMO,iBAAiB,GAAIL,CAAD,IAAwC;AAC9DF,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAIE,CAAC,CAACM,QAAF,KAAe,EAAnB,EAAuB;AACnBH,MAAAA,OAAO;AACV;AACJ,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAER,KAAd;AACO,IAAA,QAAQ,EAAEI,eADjB;AAEO,IAAA,UAAU,EAAEM,iBAFnB;AAGO,IAAA,SAAS,EAAER,KAAK,GAAG,OAAH,GAAa,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAA0B,IAAA,OAAO,EAAE,WAAnC;AAAgD,IAAA,KAAK,EAAE,SAAvD;AAAkE,IAAA,IAAI,EAAE,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,EAOKN,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,KAAhC,CAPd,CADJ;AAWH","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\ntype addItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport function AddItemForm(props: addItemFormPropsType) {\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title.trim());\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <Button onClick={addItem} variant={\"contained\"} color={\"primary\"} size={\"small\"}>+</Button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}