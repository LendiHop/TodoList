{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from \"./AddItemForm\";\nimport { EditableSpan } from \"./EditableSpan\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nexport function Todolist(props) {\n  const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\n\n  const addTask = title => props.addTask(title, props.todoListID);\n\n  const changeTodoListTilte = title => props.changeTodoListTitle(title, props.todoListID);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditableSpan, {\n    title: props.title,\n    changeTitle: changeTodoListTilte,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onClickRemoveTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(AddItemForm, {\n    addItem: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.todoListID);\n\n    const onChangeHandler = e => {\n      let newIsDoneValue = e.currentTarget.checked;\n      props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\n    };\n\n    const changeTaskTitle = title => {\n      props.changeTaskTitle(t.id, title, props.todoListID);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(EditableSpan, {\n      title: t.title,\n      changeTitle: changeTaskTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: props.filter === \"all\" ? \"contained\" : \"text\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n    variant: props.filter === \"active\" ? \"contained\" : \"text\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: props.filter === \"completed\" ? \"contained\" : \"text\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/Incubator/todo/src/Todolist.tsx"],"names":["React","AddItemForm","EditableSpan","Button","IconButton","Delete","Todolist","props","onClickRemoveTodoList","removeTodoList","todoListID","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","addTask","title","changeTodoListTilte","changeTodoListTitle","tasks","map","t","onClickHandler","removeTask","id","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","changeTaskTitle","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {Button, IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype TodolistPropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListID: string) => void\r\n    changeFilter: (value: FilterValuesType, todoListID: string) => void\r\n    addTask: (title: string, todoListID: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todoListID: string) => void\r\n    filter: FilterValuesType\r\n    todoListID: string\r\n    removeTodoList: (todoListID: string) => void\r\n    changeTaskTitle: (taskID: string, newTitle: string, todoListID: string) => void\r\n    changeTodoListTitle: (title: string, todoListID: string) => void\r\n}\r\n\r\nexport function Todolist(props: TodolistPropsType) {\r\n\r\n    const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\r\n\r\n    const addTask = (title: string) => props.addTask(title, props.todoListID);\r\n\r\n    const changeTodoListTilte = (title: string) => props.changeTodoListTitle(title, props.todoListID);\r\n\r\n    return <div>\r\n        <h3>\r\n            <EditableSpan title={props.title} changeTitle={changeTodoListTilte}/>\r\n            <IconButton onClick={onClickRemoveTodoList}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.todoListID)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\r\n                    }\r\n\r\n                    const changeTaskTitle = (title: string) => {\r\n                        props.changeTaskTitle(t.id, title, props.todoListID);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <EditableSpan title={t.title} changeTitle={changeTaskTitle} />\r\n                        <IconButton onClick={onClickHandler}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <Button variant={props.filter === \"all\" ? \"contained\" : \"text\"} onClick={onAllClickHandler}>All</Button>\r\n            <Button variant={props.filter === \"active\" ? \"contained\" : \"text\"} onClick={onActiveClickHandler}>Active\r\n            </Button>\r\n            <Button color={\"secondary\"} variant={props.filter === \"completed\" ? \"contained\" : \"text\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}