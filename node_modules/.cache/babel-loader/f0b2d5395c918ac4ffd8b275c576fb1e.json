{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from \"./AddItemForm\";\nimport { EditableSpan } from \"./EditableSpan\";\nexport function Todolist(props) {\n  const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\n\n  const addTask = title => props.addTask(title, props.todoListID);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickRemoveTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(AddItemForm, {\n    addItem: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.todoListID);\n\n    const onChangeHandler = e => {\n      let newIsDoneValue = e.currentTarget.checked;\n      props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\n    };\n\n    const changeTaskTitle = title => {\n      props.changeTaskTitle(t.id, title, props.todoListID);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(EditableSpan, {\n      title: t.title,\n      changeTitle: changeTaskTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"all\" ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"active\" ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === \"completed\" ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/Incubator/todo/src/Todolist.tsx"],"names":["React","AddItemForm","EditableSpan","Todolist","props","onClickRemoveTodoList","removeTodoList","todoListID","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","addTask","title","tasks","map","t","onClickHandler","removeTask","id","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","changeTaskTitle","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype TodolistPropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListID: string) => void\r\n    changeFilter: (value: FilterValuesType, todoListID: string) => void\r\n    addTask: (title: string, todoListID: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todoListID: string) => void\r\n    filter: FilterValuesType\r\n    todoListID: string\r\n    removeTodoList: (todoListID: string) => void\r\n    changeTaskTitle: (taskID: string, newTitle: string, todoListID: string) => void\r\n}\r\n\r\nexport function Todolist(props: TodolistPropsType) {\r\n\r\n    const onClickRemoveTodoList = () => props.removeTodoList(props.todoListID);\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.todoListID);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.todoListID);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todoListID);\r\n\r\n    const addTask = (title: string) => props.addTask(title, props.todoListID);\r\n\r\n    return <div>\r\n        <h3>{props.title}\r\n            <button onClick={onClickRemoveTodoList}>x</button>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.todoListID)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.todoListID);\r\n                    }\r\n\r\n                    const changeTaskTitle = (title: string) => {\r\n                        props.changeTaskTitle(t.id, title, props.todoListID);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <EditableSpan title={t.title} changeTitle={changeTaskTitle} />\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === \"all\" ? \"active-filter\" : \"\"} onClick={onAllClickHandler}>All</button>\r\n            <button className={props.filter === \"active\" ? \"active-filter\" : \"\"} onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === \"completed\" ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}