{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\EditableSpan.tsx\";\nimport React, { useState } from 'react';\nexport function EditableSpan(props) {\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState(props.title);\n\n  const onEditMode = () => setEditMode(true);\n\n  const offEditMode = () => setEditMode(false);\n\n  const onChangeTitle = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  return editMode ? /*#__PURE__*/React.createElement(\"input\", {\n    value: props.title,\n    autoFocus: true,\n    onChange: onChangeTitle,\n    onBlur: offEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: onEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, props.title);\n}","map":{"version":3,"sources":["D:/Incubator/todo/src/EditableSpan.tsx"],"names":["React","useState","EditableSpan","props","editMode","setEditMode","title","setTitle","onEditMode","offEditMode","onChangeTitle","e","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAMA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAoD;AACvD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAASE,KAAK,CAACG,KAAf,CAAlC;;AAGA,QAAME,UAAU,GAAG,MAAMH,WAAW,CAAC,IAAD,CAApC;;AACA,QAAMI,WAAW,GAAG,MAAMJ,WAAW,CAAC,KAAD,CAArC;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAsC;AACxDJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,SACIT,QAAQ,gBACN;AACE,IAAA,KAAK,EAAED,KAAK,CAACG,KADf;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,QAAQ,EAAEI,aAHZ;AAIE,IAAA,MAAM,EAAED,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAON;AAAM,IAAA,aAAa,EAAED,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAK,CAACG,KAAxC,CARN;AAUH","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    title: string\r\n}\r\n\r\nexport function EditableSpan(props: EditableSpanPropsType) {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>(props.title);\r\n\r\n\r\n    const onEditMode = () => setEditMode(true);\r\n    const offEditMode = () => setEditMode(false);\r\n\r\n    const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n\r\n    return(\r\n        editMode\r\n        ? <input\r\n            value={props.title}\r\n            autoFocus\r\n            onChange={onChangeTitle}\r\n            onBlur={offEditMode}\r\n            />\r\n        : <span onDoubleClick={onEditMode}>{props.title}</span>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}