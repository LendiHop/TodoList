{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\nfunction App() {\n  const todoListID_1 = v1(),\n        todoListID_2 = v1();\n  const [todoLists, setTodoLists] = useState([{\n    id: todoListID_1,\n    title: \"What to learn\",\n    filter: \"all\"\n  }, {\n    id: todoListID_2,\n    title: \"What to buy\",\n    filter: \"all\"\n  }]);\n  const [tasks, setTasks] = useState({\n    [todoListID_1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }],\n    [todoListID_2]: [{\n      id: v1(),\n      title: \"Milk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Bread\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Becon\",\n      isDone: false\n    }]\n  });\n  let [filter, setFilter] = useState(\"all\");\n\n  function removeTask(taskID, todoListID) {\n    tasks[todoListID] = tasks[todoListID].filter(t => t.id !== taskID);\n    setTasks({ ...tasks\n    });\n  }\n\n  function addTask(title, todoListID) {\n    const newTask = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    setTasks({ ...tasks,\n      [todoListID]: [newTask, ...tasks[todoListID]]\n    });\n  }\n\n  function changeFilter(value, todoListID) {\n    setTodoLists(todoLists.map(tl => tl.id === todoListID ? { ...tl,\n      filter: value\n    } : tl));\n  }\n\n  function changeStatus(taskID, newIsDoneValue, todoListID) {\n    setTasks({ ...tasks,\n      [todoListID]: tasks[todoListID].map(t => t.id === taskID ? { ...t,\n        isDone: newIsDoneValue\n      } : t)\n    });\n  }\n\n  function removeTodoList(todoListID) {\n    setTodoLists(todoLists.filter(tl => tl.id !== todoListID));\n    delete tasks[todoListID];\n  }\n\n  function getTasksForTodoList(todoLists) {\n    switch (todoLists.filter) {\n      case \"active\":\n        return tasks[todoLists.id].filter(t => t.isDone === false);\n\n      case \"completed\":\n        return tasks[todoLists.id].filter(t => t.isDone === true);\n\n      default:\n        return tasks[todoLists.id];\n    }\n  }\n\n  const todoListsComponents = todoLists.map(tl => {\n    return /*#__PURE__*/React.createElement(Todolist, {\n      title: tl.title,\n      tasks: getTasksForTodoList(tl),\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeTaskStatus: changeStatus,\n      filter: tl.filter,\n      todoListID: tl.id,\n      key: tl.id,\n      removeTodoList: removeTodoList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, todoListsComponents);\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Incubator/todo/src/App.tsx"],"names":["React","useState","Todolist","v1","App","todoListID_1","todoListID_2","todoLists","setTodoLists","id","title","filter","tasks","setTasks","isDone","setFilter","removeTask","taskID","todoListID","t","addTask","newTask","changeFilter","value","map","tl","changeStatus","newIsDoneValue","removeTodoList","getTasksForTodoList","todoListsComponents"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAkBC,QAAlB,QAAiC,YAAjC;AACA,SAAQC,EAAR,QAAiB,MAAjB;;AAcA,SAASC,GAAT,GAAe;AACX,QAAMC,YAAY,GAAGF,EAAE,EAAvB;AAAA,QAA2BG,YAAY,GAAGH,EAAE,EAA5C;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAsB,CAC5D;AAACQ,IAAAA,EAAE,EAAEJ,YAAL;AAAmBK,IAAAA,KAAK,EAAE,eAA1B;AAA2CC,IAAAA,MAAM,EAAE;AAAnD,GAD4D,EAE5D;AAACF,IAAAA,EAAE,EAAEH,YAAL;AAAmBI,IAAAA,KAAK,EAAE,aAA1B;AAAyCC,IAAAA,MAAM,EAAE;AAAjD,GAF4D,CAAtB,CAA1C;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAgB;AAC9C,KAACI,YAAD,GAAgB,CACZ;AAACI,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,UAAlB;AAA8BI,MAAAA,MAAM,EAAE;AAAtC,KADY,EAEZ;AAACL,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,IAAlB;AAAwBI,MAAAA,MAAM,EAAE;AAAhC,KAFY,EAGZ;AAACL,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,SAAlB;AAA6BI,MAAAA,MAAM,EAAE;AAArC,KAHY,CAD8B;AAM9C,KAACR,YAAD,GAAgB,CACZ;AAACG,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,MAAlB;AAA0BI,MAAAA,MAAM,EAAE;AAAlC,KADY,EAEZ;AAACL,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,OAAlB;AAA2BI,MAAAA,MAAM,EAAE;AAAnC,KAFY,EAGZ;AAACL,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAE,OAAlB;AAA2BI,MAAAA,MAAM,EAAE;AAAnC,KAHY;AAN8B,GAAhB,CAAlC;AAaA,MAAI,CAACH,MAAD,EAASI,SAAT,IAAsBd,QAAQ,CAAmB,KAAnB,CAAlC;;AAEA,WAASe,UAAT,CAAoBC,MAApB,EAAoCC,UAApC,EAAwD;AACpDN,IAAAA,KAAK,CAACM,UAAD,CAAL,GAAoBN,KAAK,CAACM,UAAD,CAAL,CAAkBP,MAAlB,CAAyBQ,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,MAAvC,CAApB;AACAJ,IAAAA,QAAQ,CAAC,EAAC,GAAGD;AAAJ,KAAD,CAAR;AACH;;AAED,WAASQ,OAAT,CAAiBV,KAAjB,EAAgCQ,UAAhC,EAAoD;AAChD,UAAMG,OAAiB,GAAG;AAACZ,MAAAA,EAAE,EAAEN,EAAE,EAAP;AAAWO,MAAAA,KAAK,EAAEA,KAAlB;AAAyBI,MAAAA,MAAM,EAAE;AAAjC,KAA1B;AACAD,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACM,UAAD,GAAc,CAACG,OAAD,EAAU,GAAGT,KAAK,CAACM,UAAD,CAAlB;AAAzB,KAAD,CAAR;AACH;;AAED,WAASI,YAAT,CAAsBC,KAAtB,EAA+CL,UAA/C,EAAmE;AAC/DV,IAAAA,YAAY,CAACD,SAAS,CAACiB,GAAV,CAAcC,EAAE,IAAIA,EAAE,CAAChB,EAAH,KAAUS,UAAV,GAAuB,EAAC,GAAGO,EAAJ;AAAQd,MAAAA,MAAM,EAAEY;AAAhB,KAAvB,GAAgDE,EAApE,CAAD,CAAZ;AACH;;AAED,WAASC,YAAT,CAAsBT,MAAtB,EAAsCU,cAAtC,EAA+DT,UAA/D,EAAmF;AAC/EL,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACM,UAAD,GAAcN,KAAK,CAACM,UAAD,CAAL,CAAkBM,GAAlB,CAAsBL,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,MAAT,GAAkB,EAAC,GAAGE,CAAJ;AAAOL,QAAAA,MAAM,EAAEa;AAAf,OAAlB,GAAmDR,CAA9E;AAFT,KAAD,CAAR;AAIH;;AAED,WAASS,cAAT,CAAwBV,UAAxB,EAA4C;AACxCV,IAAAA,YAAY,CAACD,SAAS,CAACI,MAAV,CAAiBc,EAAE,IAAIA,EAAE,CAAChB,EAAH,KAAUS,UAAjC,CAAD,CAAZ;AACA,WAAON,KAAK,CAACM,UAAD,CAAZ;AACH;;AAED,WAASW,mBAAT,CAA6BtB,SAA7B,EAAsD;AAClD,YAAQA,SAAS,CAACI,MAAlB;AACI,WAAK,QAAL;AACI,eAAOC,KAAK,CAACL,SAAS,CAACE,EAAX,CAAL,CAAoBE,MAApB,CAA2BQ,CAAC,IAAIA,CAAC,CAACL,MAAF,KAAa,KAA7C,CAAP;;AACJ,WAAK,WAAL;AACI,eAAOF,KAAK,CAACL,SAAS,CAACE,EAAX,CAAL,CAAoBE,MAApB,CAA2BQ,CAAC,IAAIA,CAAC,CAACL,MAAF,KAAa,IAA7C,CAAP;;AACJ;AACI,eAAOF,KAAK,CAACL,SAAS,CAACE,EAAX,CAAZ;AANR;AAQH;;AAED,QAAMqB,mBAAmB,GAAGvB,SAAS,CAACiB,GAAV,CAAcC,EAAE,IAAI;AAC5C,wBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,EAAE,CAACf,KAApB;AACU,MAAA,KAAK,EAAEmB,mBAAmB,CAACJ,EAAD,CADpC;AAEU,MAAA,UAAU,EAAET,UAFtB;AAGU,MAAA,YAAY,EAAEM,YAHxB;AAIU,MAAA,OAAO,EAAEF,OAJnB;AAKU,MAAA,gBAAgB,EAAEM,YAL5B;AAMU,MAAA,MAAM,EAAED,EAAE,CAACd,MANrB;AAOU,MAAA,UAAU,EAAEc,EAAE,CAAChB,EAPzB;AAQU,MAAA,GAAG,EAAEgB,EAAE,CAAChB,EARlB;AASU,MAAA,cAAc,EAAEmB,cAT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAaH,GAd2B,CAA5B;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,mBADL,CADJ;AAKH;;AAED,eAAe1B,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\ntype TodoListType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype TaskStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\nfunction App() {\r\n    const todoListID_1 = v1(), todoListID_2 = v1();\r\n\r\n    const [todoLists, setTodoLists] = useState<Array<TodoListType>>([\r\n        {id: todoListID_1, title: \"What to learn\", filter: \"all\"},\r\n        {id: todoListID_2, title: \"What to buy\", filter: \"all\"},\r\n    ]);\r\n    const [tasks, setTasks] = useState<TaskStateType>({\r\n        [todoListID_1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n        ],\r\n        [todoListID_2]: [\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"Bread\", isDone: true},\r\n            {id: v1(), title: \"Becon\", isDone: false},\r\n        ]\r\n    });\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    function removeTask(taskID: string, todoListID: string) {\r\n        tasks[todoListID] = tasks[todoListID].filter(t => t.id !== taskID);\r\n        setTasks({...tasks});\r\n    }\r\n\r\n    function addTask(title: string, todoListID: string) {\r\n        const newTask: TaskType = {id: v1(), title: title, isDone: false};\r\n        setTasks({...tasks, [todoListID]: [newTask, ...tasks[todoListID]]});\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType, todoListID: string) {\r\n        setTodoLists(todoLists.map(tl => tl.id === todoListID ? {...tl, filter: value} : tl));\r\n    }\r\n\r\n    function changeStatus(taskID: string, newIsDoneValue: boolean, todoListID: string) {\r\n        setTasks({\r\n            ...tasks,\r\n            [todoListID]: tasks[todoListID].map(t => t.id === taskID ? {...t, isDone: newIsDoneValue} : t)\r\n        })\r\n    }\r\n\r\n    function removeTodoList(todoListID: string) {\r\n        setTodoLists(todoLists.filter(tl => tl.id !== todoListID));\r\n        delete tasks[todoListID];\r\n    }\r\n\r\n    function getTasksForTodoList(todoLists: TodoListType) {\r\n        switch (todoLists.filter) {\r\n            case \"active\":\r\n                return tasks[todoLists.id].filter(t => t.isDone === false);\r\n            case \"completed\":\r\n                return tasks[todoLists.id].filter(t => t.isDone === true);\r\n            default:\r\n                return tasks[todoLists.id];\r\n        }\r\n    }\r\n\r\n    const todoListsComponents = todoLists.map(tl => {\r\n        return (\r\n            <Todolist title={tl.title}\r\n                      tasks={getTasksForTodoList(tl)}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask}\r\n                      changeTaskStatus={changeStatus}\r\n                      filter={tl.filter}\r\n                      todoListID={tl.id}\r\n                      key={tl.id}\r\n                      removeTodoList={removeTodoList}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todoListsComponents}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}